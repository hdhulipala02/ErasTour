{"ast":null,"code":"var _jsxFileName = \"/Users/harshithadhulipala/Desktop/ErasTour/erastour/src/map.js\";\nimport React from 'react';\nimport geojson from './geojson.json';\nimport { geoMercator, geoPath } from 'd3-geo';\nimport { select } from 'd3-selection';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass SingleStateMap extends React.Component {\n  render() {\n    const {\n      selectedState,\n      imageUrl\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: selectedState.properties.NAME\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imageUrl,\n        alt: selectedState.properties.NAME,\n        style: {\n          width: '200px',\n          height: '200px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.props.onClose,\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default class Map extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleStateClick = state => {\n      const imageUrls = {\n        California: 'https://example.com/california.jpg',\n        // Example image URLs\n        Texas: 'https://example.com/texas.jpg'\n        // Add URLs for other states\n      };\n\n      this.setState({\n        selectedState: state,\n        imageUrl: imageUrls[state.properties.NAME]\n      });\n    };\n    this.handleMapClose = () => {\n      this.setState({\n        selectedState: null,\n        imageUrl: ''\n      });\n    };\n    this.state = {\n      selectedState: null,\n      imageUrl: ''\n    };\n  }\n  render() {\n    const {\n      selectedState,\n      imageUrl\n    } = this.state;\n    const filteredFeatures = geojson.features.filter(feature => feature.properties.NAME !== 'Alaska' && feature.properties.NAME !== 'Hawaii' && feature.properties.NAME !== 'Puerto Rico');\n    const width = 1000;\n    const height = width * 0.7;\n    const projection = geoMercator().fitSize([width, height], {\n      type: 'FeatureCollection',\n      features: filteredFeatures\n    });\n    const path = geoPath().projection(projection);\n    const svgStyle = {\n      display: 'block',\n      margin: 'auto'\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100vh'\n      },\n      children: selectedState ? /*#__PURE__*/_jsxDEV(SingleStateMap, {\n        selectedState: selectedState,\n        imageUrl: imageUrl,\n        onClose: this.handleMapClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"svg\", {\n        width: width,\n        height: height,\n        style: svgStyle,\n        children: /*#__PURE__*/_jsxDEV(\"g\", {\n          className: \"geojson-layer\",\n          children: filteredFeatures.map(d => /*#__PURE__*/_jsxDEV(\"path\", {\n            d: path(d),\n            fill: \"#eee\",\n            stroke: \"#0e1724\",\n            strokeWidth: \"1\",\n            strokeOpacity: \"0.5\",\n            onClick: () => this.handleStateClick(d),\n            onMouseEnter: e => {\n              select(e.target).attr('fill', '#000');\n            },\n            onMouseOut: e => {\n              select(e.target).attr('fill', '#eee');\n            }\n          }, d.properties.NAME, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","geojson","geoMercator","geoPath","select","jsxDEV","_jsxDEV","SingleStateMap","Component","render","selectedState","imageUrl","props","children","properties","NAME","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","style","width","height","onClick","onClose","Map","constructor","handleStateClick","state","imageUrls","California","Texas","setState","handleMapClose","filteredFeatures","features","filter","feature","projection","fitSize","type","path","svgStyle","display","margin","justifyContent","alignItems","className","map","d","fill","stroke","strokeWidth","strokeOpacity","onMouseEnter","e","target","attr","onMouseOut"],"sources":["/Users/harshithadhulipala/Desktop/ErasTour/erastour/src/map.js"],"sourcesContent":["import React from 'react';\nimport geojson from './geojson.json';\nimport { geoMercator, geoPath } from 'd3-geo';\nimport { select } from 'd3-selection';\n\nclass SingleStateMap extends React.Component {\n  render() {\n    const { selectedState, imageUrl } = this.props;\n\n    return (\n      <div>\n        <h1>{selectedState.properties.NAME}</h1>\n        <img src={imageUrl} alt={selectedState.properties.NAME} style={{ width: '200px', height: '200px' }} />\n        <button onClick={this.props.onClose}>X</button>\n      </div>\n    );\n  }\n}\n\nexport default class Map extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedState: null,\n      imageUrl: '',\n    };\n  }\n\n  handleStateClick = (state) => {\n    const imageUrls = {\n      California: 'https://example.com/california.jpg', // Example image URLs\n      Texas: 'https://example.com/texas.jpg',\n      // Add URLs for other states\n    };\n\n    this.setState({ selectedState: state, imageUrl: imageUrls[state.properties.NAME] });\n  };\n\n  handleMapClose = () => {\n    this.setState({ selectedState: null, imageUrl: '' });\n  };\n\n  render() {\n    const { selectedState, imageUrl } = this.state;\n\n    const filteredFeatures = geojson.features.filter(\n      (feature) =>\n        feature.properties.NAME !== 'Alaska' &&\n        feature.properties.NAME !== 'Hawaii' &&\n        feature.properties.NAME !== 'Puerto Rico'\n    );\n\n    const width = 1000;\n    const height = width * 0.7;\n    const projection = geoMercator().fitSize([width, height], {\n      type: 'FeatureCollection',\n      features: filteredFeatures,\n    });\n    const path = geoPath().projection(projection);\n\n    const svgStyle = {\n      display: 'block',\n      margin: 'auto',\n    };\n\n    return (\n      <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh' }}>\n        {selectedState ? (\n          <SingleStateMap selectedState={selectedState} imageUrl={imageUrl} onClose={this.handleMapClose} />\n        ) : (\n          <svg width={width} height={height} style={svgStyle}>\n            <g className=\"geojson-layer\">\n              {filteredFeatures.map((d) => (\n                <path\n                  key={d.properties.NAME}\n                  d={path(d)}\n                  fill=\"#eee\"\n                  stroke=\"#0e1724\"\n                  strokeWidth=\"1\"\n                  strokeOpacity=\"0.5\"\n                  onClick={() => this.handleStateClick(d)}\n                  onMouseEnter={(e) => {\n                    select(e.target).attr('fill', '#000');\n                  }}\n                  onMouseOut={(e) => {\n                    select(e.target).attr('fill', '#eee');\n                  }}\n                />\n              ))}\n            </g>\n          </svg>\n        )}\n      </div>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}