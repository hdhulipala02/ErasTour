{"ast":null,"code":"var _jsxFileName = \"/Users/harshithadhulipala/Desktop/ErasTour/erastour/src/map.js\";\nimport React, { Component } from 'react';\nimport geojson from './geojson.json';\nimport { geoMercator, geoPath } from 'd3-geo';\nimport { select } from 'd3-selection';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Map extends Component {\n  constructor(props) {\n    super(props);\n    this.handleStateClick = name => {\n      this.setState(prevState => ({\n        zoomedState: prevState.zoomedState === name ? null : name\n      }));\n    };\n    this.state = {\n      zoomedState: null\n    };\n  }\n  render() {\n    const filteredFeatures = geojson.features.filter(feature => feature.properties.NAME !== 'Alaska' && feature.properties.NAME !== 'Hawaii');\n    const width = 1500;\n    const height = width * 0.7;\n    const projection = geoMercator().fitSize([width, height], {\n      type: 'FeatureCollection',\n      features: filteredFeatures\n    });\n    const path = geoPath().projection(projection);\n    const containerStyle = {\n      position: 'relative',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '100vh'\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: containerStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        width: width,\n        height: height,\n        children: /*#__PURE__*/_jsxDEV(\"g\", {\n          className: \"geojson-layer\",\n          children: filteredFeatures.map(d => /*#__PURE__*/_jsxDEV(\"path\", {\n            d: path(d),\n            fill: this.state.zoomedState === d.properties.NAME ? '#FF5733' : '#eee',\n            stroke: \"#0e1724\",\n            strokeWidth: \"1\",\n            strokeOpacity: \"0.5\",\n            onClick: () => this.handleStateClick(d.properties.NAME)\n          }, d.properties.NAME, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), this.state.zoomedState && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          top: '10%',\n          left: '10%',\n          width: '80%',\n          height: '80%',\n          backgroundColor: 'rgba(255,255,255,0.9)'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          width: \"100%\",\n          height: \"100%\",\n          children: /*#__PURE__*/_jsxDEV(\"g\", {\n            className: \"geojson-layer\",\n            children: filteredFeatures.filter(feature => feature.properties.NAME === this.state.zoomedState).map(d => /*#__PURE__*/_jsxDEV(\"path\", {\n              d: path(d),\n              fill: \"#FF5733\",\n              stroke: \"#0e1724\",\n              strokeWidth: \"1\",\n              strokeOpacity: \"0.5\"\n            }, d.properties.NAME, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Map;","map":{"version":3,"names":["React","Component","geojson","geoMercator","geoPath","select","jsxDEV","_jsxDEV","Map","constructor","props","handleStateClick","name","setState","prevState","zoomedState","state","render","filteredFeatures","features","filter","feature","properties","NAME","width","height","projection","fitSize","type","path","containerStyle","position","display","justifyContent","alignItems","style","children","className","map","d","fill","stroke","strokeWidth","strokeOpacity","onClick","fileName","_jsxFileName","lineNumber","columnNumber","top","left","backgroundColor"],"sources":["/Users/harshithadhulipala/Desktop/ErasTour/erastour/src/map.js"],"sourcesContent":["import React, { Component } from 'react';\nimport geojson from './geojson.json';\nimport { geoMercator, geoPath } from 'd3-geo';\nimport { select } from 'd3-selection';\n\nclass Map extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      zoomedState: null,\n    };\n  }\n\n  handleStateClick = (name) => {\n    this.setState((prevState) => ({\n      zoomedState: prevState.zoomedState === name ? null : name,\n    }));\n  };\n\n  render() {\n    const filteredFeatures = geojson.features.filter(\n      (feature) =>\n        feature.properties.NAME !== 'Alaska' &&\n        feature.properties.NAME !== 'Hawaii'\n    );\n\n    const width = 1500;\n    const height = width * 0.7;\n    const projection = geoMercator().fitSize([width, height], {\n      type: 'FeatureCollection',\n      features: filteredFeatures,\n    });\n    const path = geoPath().projection(projection);\n\n    const containerStyle = {\n      position: 'relative',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '100vh',\n    };\n\n    return (\n      <div style={containerStyle}>\n        <svg width={width} height={height}>\n          <g className=\"geojson-layer\">\n            {filteredFeatures.map((d) => (\n              <path\n                key={d.properties.NAME}\n                d={path(d)}\n                fill={this.state.zoomedState === d.properties.NAME ? '#FF5733' : '#eee'}\n                stroke=\"#0e1724\"\n                strokeWidth=\"1\"\n                strokeOpacity=\"0.5\"\n                onClick={() => this.handleStateClick(d.properties.NAME)}\n              />\n            ))}\n          </g>\n        </svg>\n        {this.state.zoomedState && (\n          <div style={{ position: 'absolute', top: '10%', left: '10%', width: '80%', height: '80%', backgroundColor: 'rgba(255,255,255,0.9)' }}>\n            <svg width=\"100%\" height=\"100%\">\n              <g className=\"geojson-layer\">\n                {filteredFeatures\n                  .filter((feature) => feature.properties.NAME === this.state.zoomedState)\n                  .map((d) => (\n                    <path\n                      key={d.properties.NAME}\n                      d={path(d)}\n                      fill=\"#FF5733\"\n                      stroke=\"#0e1724\"\n                      strokeWidth=\"1\"\n                      strokeOpacity=\"0.5\"\n                    />\n                  ))}\n              </g>\n            </svg>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Map;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}