{"ast":null,"code":"var _jsxFileName = \"/Users/harshithadhulipala/Desktop/ErasTour/erastour/src/map.js\";\nimport React from 'react';\nimport geojson from './geojson.json';\nimport { geoMercator, geoPath } from 'd3-geo';\nimport { select } from 'd3-selection';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Map extends React.Component {\n  render() {\n    const filteredFeatures = geojson.features.filter(feature => feature.properties.NAME !== 'Alaska' && feature.properties.NAME !== 'Hawaii');\n    const width = 1500;\n    const height = width * 0.7;\n    const projection = geoMercator().fitSize([width, height], {\n      type: 'FeatureCollection',\n      features: filteredFeatures\n    });\n    const path = geoPath().projection(projection);\n    const svgStyle = {\n      display: 'block',\n      margin: 'auto'\n    };\n    const containerStyle = {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '100vh'\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: containerStyle,\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        width: width,\n        height: height,\n        style: svgStyle,\n        children: /*#__PURE__*/_jsxDEV(\"g\", {\n          className: \"geojson-layer\",\n          children: filteredFeatures.map(d => /*#__PURE__*/_jsxDEV(\"path\", {\n            d: path(d),\n            fill: \"#eee\",\n            stroke: \"#0e1724\",\n            strokeWidth: \"1\",\n            strokeOpacity: \"0.5\",\n            onMouseEnter: e => {\n              select(e.target).attr('fill', '#000');\n            },\n            onMouseOut: e => {\n              select(e.target).attr('fill', '#eee');\n            }\n          }, d.properties.NAME, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","geojson","geoMercator","geoPath","select","jsxDEV","_jsxDEV","Map","Component","render","filteredFeatures","features","filter","feature","properties","NAME","width","height","projection","fitSize","type","path","svgStyle","display","margin","containerStyle","justifyContent","alignItems","style","children","className","map","d","fill","stroke","strokeWidth","strokeOpacity","onMouseEnter","e","target","attr","onMouseOut","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/harshithadhulipala/Desktop/ErasTour/erastour/src/map.js"],"sourcesContent":["import React from 'react';\nimport geojson from './geojson.json';\nimport { geoMercator, geoPath } from 'd3-geo';\nimport { select } from 'd3-selection';\n\nexport default class Map extends React.Component {\n  render() {\n    const filteredFeatures = geojson.features.filter(\n      (feature) =>\n        feature.properties.NAME !== 'Alaska' &&\n        feature.properties.NAME !== 'Hawaii'\n    );\n\n    const width = 1500;\n    const height = width * 0.7;\n    const projection = geoMercator().fitSize([width, height], {\n      type: 'FeatureCollection',\n      features: filteredFeatures,\n    });\n    const path = geoPath().projection(projection);\n\n    const svgStyle = {\n      display: 'block',\n      margin: 'auto',\n    };\n\n    const containerStyle = {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '100vh',\n    };\n\n    return (\n      <div style={containerStyle}>\n        <svg width={width} height={height} style={svgStyle}>\n          <g className=\"geojson-layer\">\n            {filteredFeatures.map((d) => (\n              <path\n                key={d.properties.NAME}\n                d={path(d)}\n                fill=\"#eee\"\n                stroke=\"#0e1724\"\n                strokeWidth=\"1\"\n                strokeOpacity=\"0.5\"\n                onMouseEnter={(e) => {\n                  select(e.target).attr('fill', '#000');\n                }}\n                onMouseOut={(e) => {\n                  select(e.target).attr('fill', '#eee');\n                }}\n              />\n            ))}\n          </g>\n        </svg>\n      </div>\n    );\n  }\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,gBAAgB;AACpC,SAASC,WAAW,EAAEC,OAAO,QAAQ,QAAQ;AAC7C,SAASC,MAAM,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,eAAe,MAAMC,GAAG,SAASP,KAAK,CAACQ,SAAS,CAAC;EAC/CC,MAAMA,CAAA,EAAG;IACP,MAAMC,gBAAgB,GAAGT,OAAO,CAACU,QAAQ,CAACC,MAAM,CAC7CC,OAAO,IACNA,OAAO,CAACC,UAAU,CAACC,IAAI,KAAK,QAAQ,IACpCF,OAAO,CAACC,UAAU,CAACC,IAAI,KAAK,QAChC,CAAC;IAED,MAAMC,KAAK,GAAG,IAAI;IAClB,MAAMC,MAAM,GAAGD,KAAK,GAAG,GAAG;IAC1B,MAAME,UAAU,GAAGhB,WAAW,CAAC,CAAC,CAACiB,OAAO,CAAC,CAACH,KAAK,EAAEC,MAAM,CAAC,EAAE;MACxDG,IAAI,EAAE,mBAAmB;MACzBT,QAAQ,EAAED;IACZ,CAAC,CAAC;IACF,MAAMW,IAAI,GAAGlB,OAAO,CAAC,CAAC,CAACe,UAAU,CAACA,UAAU,CAAC;IAE7C,MAAMI,QAAQ,GAAG;MACfC,OAAO,EAAE,OAAO;MAChBC,MAAM,EAAE;IACV,CAAC;IAED,MAAMC,cAAc,GAAG;MACrBF,OAAO,EAAE,MAAM;MACfG,cAAc,EAAE,QAAQ;MACxBC,UAAU,EAAE,QAAQ;MACpBV,MAAM,EAAE;IACV,CAAC;IAED,oBACEX,OAAA;MAAKsB,KAAK,EAAEH,cAAe;MAAAI,QAAA,eACzBvB,OAAA;QAAKU,KAAK,EAAEA,KAAM;QAACC,MAAM,EAAEA,MAAO;QAACW,KAAK,EAAEN,QAAS;QAAAO,QAAA,eACjDvB,OAAA;UAAGwB,SAAS,EAAC,eAAe;UAAAD,QAAA,EACzBnB,gBAAgB,CAACqB,GAAG,CAAEC,CAAC,iBACtB1B,OAAA;YAEE0B,CAAC,EAAEX,IAAI,CAACW,CAAC,CAAE;YACXC,IAAI,EAAC,MAAM;YACXC,MAAM,EAAC,SAAS;YAChBC,WAAW,EAAC,GAAG;YACfC,aAAa,EAAC,KAAK;YACnBC,YAAY,EAAGC,CAAC,IAAK;cACnBlC,MAAM,CAACkC,CAAC,CAACC,MAAM,CAAC,CAACC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC;YACvC,CAAE;YACFC,UAAU,EAAGH,CAAC,IAAK;cACjBlC,MAAM,CAACkC,CAAC,CAACC,MAAM,CAAC,CAACC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC;YACvC;UAAE,GAXGR,CAAC,CAAClB,UAAU,CAACC,IAAI;YAAA2B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAYvB,CACF;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}